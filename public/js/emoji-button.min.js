document.addEventListener('DOMContentLoaded', () => {
    const emojiButton = document.getElementById('emojiButton');
    const emojiPicker = document.getElementById('emoji-picker');
    const msgInput = document.getElementById('msgInput');

    // V√©rification des √©l√©ments dans le DOM
    if (!emojiButton || !emojiPicker || !msgInput) {
        console.error("Un ou plusieurs √©l√©ments requis sont introuvables dans le DOM.");
        return;
    }

    // Initialisation des √©mojis
    const emojis = [
        'üòÄ', 'üòÇ', 'üòç', 'üò¢', 'üò°', 'üëç', 'üëé', 'üëè', 'üôÉ', 'üòé', 
        'ü•≥', 'üò±', 'üíî', '‚ù§Ô∏è', 'ü§î', 'ü§ó', 'üòá', 'ü§°', 'üò¥', 'üòú'
    ];

    // Ajouter les √©mojis au conteneur du s√©lecteur
    emojiPicker.innerHTML = emojis.map(emoji => `<span class="emoji">${emoji}</span>`).join('');

    // Masquer ou afficher le s√©lecteur d'√©mojis
    emojiButton.addEventListener('click', () => {
        const isHidden = emojiPicker.style.display === 'none' || !emojiPicker.style.display;
        emojiPicker.style.display = isHidden ? 'flex' : 'none';
    });

    // Gestion de l'ajout d'√©mojis au champ de texte
    emojiPicker.addEventListener('click', (event) => {
        if (event.target.classList.contains('emoji')) {
            const selectedEmoji = event.target.textContent;
            msgInput.value += selectedEmoji; // Ajouter l'√©moji s√©lectionn√©
            emojiPicker.style.display = 'none'; // Masquer le s√©lecteur apr√®s la s√©lection
        }
    });

    // Styles par d√©faut pour le s√©lecteur d'√©mojis
    emojiPicker.style.display = 'none'; // Initialement masqu√©
    emojiPicker.style.position = 'absolute';
    emojiPicker.style.border = '1px solid #ddd';
    emojiPicker.style.borderRadius = '8px';
    emojiPicker.style.padding = '10px';
    emojiPicker.style.backgroundColor = '#fff';
    emojiPicker.style.boxShadow = '0px 4px 8px rgba(0, 0, 0, 0.1)';
    emojiPicker.style.flexWrap = 'wrap';
    emojiPicker.style.justifyContent = 'center';
    emojiPicker.style.gap = '10px';
});
